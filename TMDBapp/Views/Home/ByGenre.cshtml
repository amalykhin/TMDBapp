@model TMDBapp.Models.ByGenreViewModel

@{
    var title = "Genre: " + Model.Name;
    ViewData["Title"] = title;
    var baseUri = "https://image.tmdb.org/t/p/w200";

    var isAscending = Model.Movies.SortDirection == "asc";
    var movies = isAscending ? Model.Movies.Results.OrderBy(x => x.Rating) : Model.Movies.Results;
    var page = Model.Movies.Page;
    var totalPages = Model.Movies.TotalPages;
    var prevPage = Math.Max(page - 1, 1);
    var nextPage = Math.Min(page + 1, totalPages);
}

@functions {
    string GetUri(int page = 1)
    {
        return $"/Home/ByGenre?genreId={Model.Id}&genreName={Model.Name}&page={page}&sortDirection={Model.Movies.SortDirection}";
    }
}

<style>
    .card {
        cursor: pointer;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-title {
        height: 70px;
    }
</style>

<h1 style="display: inline-block; margin-right: 20px">@title</h1>
@*Rating:
<div class="form-check form-check-inline">
    <input class="form-check-input" type="radio" name="ratingSort" id="inlineRadio1" value="asc" @(isAscending ? "checked" : "")>
    <label class="form-check-label" for="inlineRadio1">asc</label>
</div>
<div class="form-check form-check-inline">
    <input class="form-check-input" type="radio" name="ratingSort" id="inlineRadio2" value="desc" @(!isAscending ? "checked" : "")>
    <label class="form-check-label" for="inlineRadio2">desc</label>
</div>*@


<div style="display: grid; grid-template-columns: repeat(5, 1fr); gap: 20px">
    @foreach (var movie in movies)
    {
        <div class="card" data-movie-id="@movie.Id">
            <img class="card-img-top" src="@(baseUri + movie.PosterPath)" alt="Card image cap">
            <div class="card-body">
                <h5 class="card-title">@(movie.Title)</h5>
                <button data-movie-id="@movie.Id" class="btn @(movie.IsFavourite ? "btn-danger favourite" : "btn-primary ") js-fav-btn">@(movie.IsFavourite ? "-" : "+") Favourite</button>
            </div>
        </div>
    }
</div>
<nav>
    <ul class="pagination" style="justify-content: center; margin-top: 20px">
        <li class="page-item @(page == 1 ? "disabled" : "")"><a class="page-link" href="@GetUri()">&lt;&lt;</a></li>
        <li class="page-item @(page == 1 ? "disabled" : "")"><a class="page-link" href="@GetUri(prevPage)"><</a></li>
        @for (int i = Math.Max(page - 2, 1); i <= Math.Min(page + 2, totalPages); i++)
        {
            <li class="page-item @(i == page ? "active" : "")"><a class="page-link" href="@GetUri(i)">@i</a></li>
        }
        <li class="page-item @(page == totalPages ? "disabled" : "")"><a class="page-link" href="@GetUri(nextPage)">&gt;</a></li>
        <li class="page-item @(page == totalPages ? "disabled" : "")"><a class="page-link" href="@GetUri(@totalPages)">&gt;&gt;</a></li>
    </ul>
</nav>

<script>
    $(() => {
        $("[name=ratingSort]").on("click", function () {
            window.location = `/Home/ByGenre?genreId={@Model.Id}&genreName={@Model.Name}&sortDirection=${$(this).val()}`
        })
    });
</script>